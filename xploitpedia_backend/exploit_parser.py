#!/usr/bin/python3
"""
    exploit parsing module
    - Contains all exploit data urls and parsing operations
"""

from setup_initialization import json, json_organizers
from setup_initialization import mitre_attack_data, malpedia_families
import requests


class Cvexpedia_exploits:
    """
    Cvexpedia_Items
    - Class containing all malware/Exploit category items
    """

    software = mitre_attack_data.get_software(remove_revoked_deprecated=True)
    campaigns = mitre_attack_data.get_campaigns(remove_revoked_deprecated=True)
    groups = mitre_attack_data.get_groups(remove_revoked_deprecated=True)
    malware_families = malpedia_families
    ioc =  {}

    def stiix_software(self):
        """Mitre software categorization of objects"""
        ids = [f"{x.get('name')}.{x.get('id')}" for x in self.software]

        obj_dict = {obj_id: object for  (obj_id, object) in zip(ids, self.software)}
        return(obj_dict)

    def stiix_campaigns(self):
        """Mitre campaign categorization of objects"""
        ids = [f"{x.get('name')}.{x.get('id')}" for x in self.campaigns]

        obj_dict = {obj_id: object for  (obj_id, object) in zip(ids, self.campaigns)}
        return(obj_dict)

    def stiix_groups(self):
        """Mitre group categorization of objects"""
        ids = [f"{x.get('name')}.{x.get('id')}" for x in self.groups]

        obj_dict = {obj_id: object for  (obj_id, object) in zip(ids, self.groups)}
        return(obj_dict)

    def malpedia_families(self):
        """returns malpedia family dictionar(y | ies)"""
        return(malpedia_families)

    def recent_iocs(self):
        """returns a list of all recent ioc categorized by number of days"""

        post_data = json.dumps({"query": "get_iocs", "days": 7})

        recent_iocs = requests.post(
            'https://threatfox-api.abuse.ch/api/v1/', data = post_data
            )

        if (recent_iocs.json().get('query_status') == 'ok'):
            return(recent_iocs.json().get('data'))

    def all_iocs(self):
        return (json_organizers)

